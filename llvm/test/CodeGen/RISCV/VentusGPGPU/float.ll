; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -mcpu=ventus-gpgpu -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=VENTUS %s

define float @foo_fadd(float noundef %a, float noundef %b) {
; VENTUS-LABEL: foo_fadd:
; VENTUS:       # %bb.0: # %entry
; VENTUS-NEXT:    vfadd.vv v0, v0, v1
; VENTUS-NEXT:    ret
entry:
  %add = fadd float %a, %b
  ret float %add
}

define float @foo_fmul(float noundef %a, float noundef %b) {
; VENTUS-LABEL: foo_fmul:
; VENTUS:       # %bb.0: # %entry
; VENTUS-NEXT:    vfmul.vv v0, v0, v1
; VENTUS-NEXT:    ret
entry:
  %mul = fmul float %a, %b
  ret float %mul
}

define float @foo_fdiv(float noundef %a, float noundef %b) {
; VENTUS-LABEL: foo_fdiv:
; VENTUS:       # %bb.0: # %entry
; VENTUS-NEXT:    vfdiv.vv v0, v0, v1
; VENTUS-NEXT:    ret
entry:
  %div = fdiv float %a, %b
  ret float %div
}

define float @foo_constant(float noundef %a) {
; VENTUS-LABEL: foo_constant:
; VENTUS:       # %bb.0: # %entry
; VENTUS-NEXT:    lui x10, %hi(.LCPI3_0)
; VENTUS-NEXT:    lw x10, %lo(.LCPI3_0)(x10)
; VENTUS-NEXT:    vmv.s.x v1, x10
; VENTUS-NEXT:    vfmul.vv v0, v0, v1
; VENTUS-NEXT:    ret
entry:
  %mul = fmul float %a, 1.25
  ret float %mul
}

define float @sqrt_f32(float %a) {
; VENTUS-LABEL: sqrt_f32:
; VENTUS:       # %bb.0:
; VENTUS-NEXT:    vfsqrt.v v0, v0
; VENTUS-NEXT:    ret
  %b = call float @llvm.sqrt.f32(float %a)
  ret float %b
}
declare float @llvm.sqrt.f32(float %Val)
